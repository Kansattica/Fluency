language: csharp
matrix:
  include:
  - os: linux
    mono: latest
    dotnet: 3.1.101
  - os: windows
    mono: none

before_install:
  - export DOTNET_SKIP_FIRST_TIME_EXPERIENCE=1
  - export DOTNET_CLI_TELEMETRY_OPTOUT=1

script:
  - if [ "$TRAVIS_OS_NAME" = "windows" ]; then choco install dotnetcore-sdk --version 3.1.101 -y; fi
  - dotnet test Tests/ConsoleTests
  - dotnet test Tests/ExecutionTests
  - dotnet test Tests/InterpreterTests
  - mkdir UploadThis
  - cd Console
  - mkdir BuildTo
  - dotnet build
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then dotnet publish --configuration Release -p:PublishSingleFile=true -p:PublishTrimmed=true -r linux-x64 -o BuildTo ; mv BuildTo/Console ../UploadThis/fluency-linux64; fi
  - if [ "$TRAVIS_OS_NAME" = "windows" ]; then dotnet publish --configuration Release -p:PublishSingleFile=true -p:PublishTrimmed=true -r win-x64 -o BuildTo ; mv BuildTo/Console.exe ../UploadThis/fluency-win64.exe; fi
  - if [ "$TRAVIS_OS_NAME" = "windows" ]; then dotnet publish --configuration release -p:PublishSingleFile=true -p:PublishTrimmed=true -r win-x86 -o BuildTo ; mv BuildTo/Console.exe ../UploadThis/fluency-win32.exe; fi
  - cd ..
  - ls UploadThis
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then cd Documentation; wget https://github.com/dotnet/docfx/releases/download/v2.48.1/docfx.zip; mkdir docfx; unzip docfx.zip -d docfx; mono docfx/docfx.exe; cd ..; fi
  - cd "$TRAVIS_BUILD_DIR"

deploy:
  - provider: pages
    cleanup: false
    skip_cleanup: true
    github_token: $push_token
    local_dir: Documentation/_site
    repo: Kansattica/Fluency
    target_branch: gh-pages
    verbose: true
    on:
      branch: master
      condition: $TRAVIS_OS_NAME = "linux" 

  - provider: releases
    cleanup: false
    skip_cleanup: true
    api_key: $release_token
    file_glob: true
    file: UploadThis/*
    draft: true
    on:
      tags: true
